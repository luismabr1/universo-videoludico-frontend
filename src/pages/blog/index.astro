---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import qs from 'qs'
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import FormattedDate from '../../components/FormattedDate.astro';
let url = import.meta.env.STRAPI_URL + "/api/posts";
let root_url = import.meta.env.STRAPI_URL ;


const query = qs.stringify({
  populate: {
    featuredImage: {
      fields: ["name", "width", "height", "url"],
    },
    author: {
      populate: {
        bioImage: {
          fields: ["name", "width", "height", "url"],
        },
      },
    },
    category: {
      populate: true,
    },
  },
});

const posts = await fetch(url + "?" + query).then((response) =>
  response.json()
);
const {data}=posts

---

<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 1rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			ul li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
			}
			ul li:first-child .title {
				font-size: 2.369rem;
			}
			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			ul li a:hover h4,
			ul li a:hover .date {
				color: rgb(var(--accent));
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				<ul>
					{
						data.map((post) => {
						  // Handle potential missing featuredImage
						  const featuredImage = post.attributes.featuredImage?.data?.[0];
						  return (
							<li key={post.id}> {/* Add a unique key for each list item */}
							  <a href={`/blog/${post.attributes.slug}/`}>
								{featuredImage && (
								  <img
									width={720}
									height={360}
									src={featuredImage.attributes.url
										? root_url + featuredImage.attributes.url
										: "https://via.placeholder.com/1080"}
									alt={featuredImage.attributes.name}
								  />
								)}
								<h4 class="title">{post.attributes.title}</h4>
								<p class="date">
								  <FormattedDate date={post.attributes.publishedAt} />
								</p>
							  </a>
							</li>
						  );
						})
					  }
				</ul>
			</section>
		</main>
		<Footer />
	</body>
</html>
