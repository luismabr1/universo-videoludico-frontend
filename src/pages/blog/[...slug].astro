---
import type { GetStaticPaths } from 'astro';
import BlogPostSingle from '../../layouts/BlogPostSingle.astro';
import SingleBlogPage from './SingleBlogPage.astro';
import qs from 'qs'

export async function getStaticPaths() {
  let url = import.meta.env.STRAPI_URL + "/api/posts";

  const query = qs.stringify({
  populate: {
    featuredImage: {
      fields: ["name", "width", "height", "url"],
    },
    author: {
      populate: {
        bioImage: {
          fields: ["name", "width", "height", "url"],
        },
      },
    },
    category: {
      populate: true,
    },
  },
});
console.log(url + query, 'version')
const dato = await fetch(url + "?" + query)
  .then(response => {
    if (!response.ok) {
      throw new Error(`Error fetching data: ${response.status}`); // Handle error
    }
    return response.json();
  })
  .catch(error => {
    console.error('Error fetching data:', error);
    // Handle error here (e.g., return an empty array)
  });
  return dato.data.map((post) => {
    return {
      params: { slug: post.attributes.slug },
      props: { post },
    };
  }) satisfies GetStaticPaths
}
const { slug } = Astro.params
const {post} =Astro.props
---

<BlogPostSingle layout={post}>
  <SingleBlogPage post={post}/>
</BlogPostSingle> 
